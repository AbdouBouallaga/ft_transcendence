version: '3.7'

networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24

services:
  Frontend:
    image: node:18.12.1-buster
    container_name: Frontend
    restart: always
    volumes:
      - ./src/frontend_next:/usr/src/app
    ports:
      - 80:3000
    working_dir: /usr/src/app
    command: bash -c "npm install && npm run dev"
    networks:
      my-network:
        ipv4_address: 10.0.0.2
  
  Backend:
    image: node:18.12.1-buster
    container_name: Backend
    restart: always
    volumes:
      - ./src/backend_nest:/usr/src/app
    ports:
      - 5000:3000
      - 5333:5555
    working_dir: /usr/src/app
    command: bash -c "npm install && npx prisma migrate reset --force && npx prisma studio > /dev/null | npm run start:dev"
    networks:
      my-network:
        ipv4_address: 10.0.0.3

  postgres:
    image: postgres:latest
    container_name: pg_database
    restart: always
    volumes:
      - ./storage/postgres_data:/var/lib/postgresql/data
    env_file:
      - ./env/.postgres.env
    networks:
      my-network:
        ipv4_address: 10.0.0.4
    expose:
      - 5432

  pgadmin:
    depends_on:
      - postgres
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file:
      - ./env/.pgadmin.env
    ports:
      - 5050:80
    networks:
      my-network:
        ipv4_address: 10.0.0.5
    volumes:
      - ./storage/pgadmin_data:/var/lib/pgadmin
  
  # swagger:
  #   image: swaggerapi/swagger-ui
  #   container_name: swagger
  #   restart: always
  #   ports:
  #     - 8888:8080
  #   networks:
  #     my-network:
  #       ipv4_address: 10.0.0.6